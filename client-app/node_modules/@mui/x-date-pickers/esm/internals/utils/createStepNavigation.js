import _extends from "@babel/runtime/helpers/esm/extends";
/**
 * Create an object that determines whether there is a next step and allows to go to the next step.
 * @param {CreateStepNavigationParameters<TStep>} parameters The parameters of the createStepNavigation function
 * @returns {CreateStepNavigationReturnValue} The return value of the createStepNavigation function
 */
export function createStepNavigation(parameters) {
  const {
    steps,
    isCurrentViewMatchingStep,
    onStepChange
  } = parameters;
  return parametersBis => {
    if (steps == null) {
      return {
        hasNextStep: false,
        goToNextStep: () => {}
      };
    }
    const currentStepIndex = steps.findIndex(step => isCurrentViewMatchingStep(parametersBis.view, step));
    const nextStep = currentStepIndex === -1 || currentStepIndex === steps.length - 1 ? null : steps[currentStepIndex + 1];
    return {
      hasNextStep: nextStep != null,
      goToNextStep: () => {
        if (nextStep == null) {
          return;
        }
        onStepChange(_extends({}, parametersBis, {
          step: nextStep
        }));
      }
    };
  };
}